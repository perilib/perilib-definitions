{
    "documents": [
        {
            "type": "reference",
            "name": "iWRAP 5.6.0, iWRAP 6.1.0 and iWRAP 6.1.1 User Guide and API Reference",
            "version": "3.7",
            "date": "2017-04-06",
            "url": "https://www.silabs.com/documents/login/user-guides/UG218.pdf"
        }
    ],
    "protocols": {
        "silabs-iwrap": {
            "name": "Silicon Labs Bluetooth Classic iWRAP (WT11, WT12, WT32, WT41 series)",
            "type": "stream",
            "format": "text",
            "token": "iwrap",
            "test_packet_complete": "$packet.data[-1] == 10",
            "packets": {
                "commands": {
                    "direction": "both",
                    "token_out": "cmd",
                    "token_in": "rsp",
                    "entities": {
                        "link_command": {
                            "shortdesc": "Command @ can be used to read send commands to a dedicated profile parser like Hands-Free Profile's AT-command parser.",
                            "command_args": [
                                {
                                    "name": "link_id",
                                    "type": "uint8",
                                    "shortdesc": "Numeric connection identifier"
                                },
                                {
                                    "name": "command",
                                    "type": "uint8a-greedy",
                                    "shortdesc": "Command to send to parser"
                                }
                            ],
                            "response_args": []
                        },
                        "pskey_query": {
                            "shortdesc": "Command &{pskey}? can be used to read the value of any PSKEY stored in the module persistent store.",
                            "command_args": [
                                {
                                    "name": "pskey",
                                    "type": "uint16",
                                    "shortdesc": "PSKEY to read in hexadecimal format"
                                }
                            ],
                            "response_args": [
                                {
                                    "name": "pskey",
                                    "type": "uint16",
                                    "shortdesc": "PSKEY to read in hexadecimal format"
                                },
                                {
                                    "name": "value",
                                    "type": "uint8a-greedy",
                                    "shortdesc": "Value of the PSKEY in hexadecimal format"
                                }
                            ]
                        },
                        "aio": {
                            "shortdesc": "Command AIO can be used to read the value of ADC converters. WT12 does not have any AIO pins, WT32i has AIO0 and AIO1, all other modules have AIO1.",
                            "command_args": [
                                {
                                    "name": "source",
                                    "type": "uint8",
                                    "shortdesc": "Source AIO to read"
                                }
                            ],
                            "response_args": [
                                {
                                    "name": "source",
                                    "type": "uint8",
                                    "shortdesc": "Source AIO to read"
                                },
                                {
                                    "name": "value",
                                    "type": "uint8a-greedy",
                                    "shortdesc": "Value of the AIO in hexadecimal format"
                                }
                            ]
                        },
                        "at": {
                            "shortdesc": "Command AT, \"attention\", can be used to check that iWRAP is functional and in command mode.",
                            "command_args": [],
                            "response_args": []
                        },
                        "aptx": {
                            "shortdesc": "APTX command can be used to check if an aptX license key is installed or not. This command works only in iWRAP 6.0.0 and newer firmware builds which have the aptX codec installed.",
                            "command_args": [],
                            "response_args": []
                        },
                        "aptxll": {
                            "shortdesc": "APTXLL command can be used to check if an aptX Low Latency license key is installed or not. This command works only in iWRAP 6.1.0 and newer firmware builds which have the aptX Low Latency codec installed.",
                            "command_args": [],
                            "response_args": []
                        },
                        "auth": {
                            "shortdesc": "AUTH command can be used to reply to AUTH event to perform interactive pairing. AUTH event is only displayed if SET CONTROL CONFIG bit 11 is set.",
                            "command_args": [
                                {
                                    "name": "bd_addr",
                                    "type": "mac_addr",
                                    "shortdesc": "Bluetooth device address of the remote device in format xx:xx:xx:xx:xx:xx where x is hexadecimal digit"
                                },
                                {
                                    "name": "pin_code",
                                    "type": "uint16",
                                    "shortdesc": "Bluetooth pin code"
                                }
                            ],
                            "response_args": []
                        },
                        "avrcp_pdu": {
                            "shortdesc": "AVRCP PDU command is used by the AVRCP Controller to send metadata request Protocol Data Units to the Target.",
                            "command_args": [
                                {
                                    "name": "pdu_id",
                                    "type": "uint16",
                                    "shortdesc": "PDU ID to send"
                                },
                                {
                                    "name": "parameters",
                                    "type": "uint8a-greedy",
                                    "required": false,
                                    "shortdesc": "PDU parameters, if any"
                                }
                            ]
                        },
                        "battery": {
                            "shortdesc": "Command BATTERY is used to read the current voltage of the module battery. The command works only with WT32i.",
                            "command_args": [],
                            "response_args": []
                        },
                        "ber": {
                        },
                        "call": {
                        },
                        "clock": {
                        },
                        "close": {
                        },
                        "connauth": {
                        },
                        "connect": {
                        },
                        "cvc": {
                        },
                        "echo": {
                        },
                        "i2c": {
                        },
                        "ic": {
                        },
                        "ident": {
                        },
                        "inquiry": {
                        },
                        "kill": {
                        },
                        "l2cap": {
                        },
                        "list": {
                        },
                        "loopback": {
                        },
                        "name": {
                        },
                        "pair": {
                        },
                        "ping": {
                        },
                        "rfcomm": {
                        },
                        "rssi": {
                        },
                        "sco_enable": {
                        },
                        "sco_open": {
                        },
                        "sdp": {
                        },
                        "sdp_add": {
                        },
                        "select": {
                        },
                        "test": {
                        },
                        "testmode": {
                        },
                        "txpower": {
                        },
                        "a2dp": {
                        },
                        "bcsp_enable": {
                        },
                        "blink": {
                        },
                        "boot": {
                        },
                        "bypassuart": {
                        },
                        "defrag": {
                        },
                        "delay": {
                        },
                        "help": {
                        },
                        "hid_get": {
                        },
                        "hid_set": {
                        },
                        "info": {
                        },
                        "pio": {
                        },
                        "reset": {
                        },
                        "set": {
                        },
                        "set_bt": {
                        },
                        "set_control": {
                        },
                        "set_devkit": {
                        },
                        "set_reset": {
                        },
                        "sleep": {
                        },
                        "temp": {
                        },
                        "volume": {
                        },
                        "set_bt_auth": {
                        },
                        "set_bt_bdaddr": {
                        },
                        "set_bt_class": {
                        },
                        "set_bt_filter": {
                        },
                        "set_bt_ident": {
                        },
                        "set_bt_lap": {
                        },
                        "set_bt_mtu": {
                        },
                        "set_bt_name": {
                        },
                        "set_bt_opp": {
                        },
                        "set_bt_pagemode": {
                        },
                        "set_bt_pair": {
                        },
                        "set_bt_paircount": {
                        },
                        "set_bt_power": {
                        },
                        "set_bt_role": {
                        },
                        "set_bt_sco": {
                        },
                        "set_bt_sniff": {
                        },
                        "set_bt_ssp": {
                        },
                        "set_control_audio": {
                        },
                        "set_control_autocall": {
                        },
                        "set_control_autopair": {
                        },
                        "set_control_battery": {
                        },
                        "set_control_baud": {
                        },
                        "set_control_bind": {
                        },
                        "set_control_cd": {
                        },
                        "set_control_codec": {
                        },
                        "set_control_config": {
                        },
                        "set_control_echo": {
                        },
                        "set_control_gain": {
                        },
                        "set_control_init": {
                        },
                        "set_control_micbias": {
                        },
                        "set_control_msc": {
                        },
                        "set_control_mux": {
                        },
                        "set_control_pcm": {
                        },
                        "set_control_pio": {
                        },
                        "set_control_preamp": {
                        },
                        "set_control_ringtone": {
                        },
                        "set_control_ready": {
                        },
                        "set_control_volscale": {
                        },
                        "set_control_vregen": {
                        },
                        "set_link_active": {
                        },
                        "set_link_master": {
                        },
                        "set_link_msc": {
                        },
                        "set_link_park": {
                        },
                        "set_link_select": {
                        },
                        "set_link_slave": {
                        },
                        "set_link_sniff": {
                        }
                    }
                },
                "events": {
                    "direction": "in",
                    "token_in": "evt",
                    "entities": {
                    }
                }
            }
        },
        "silabs-iwrap-mux": {
            "template": "silabs-iwrap",
            "test_packet_start": "false",
            "test_packet_complete": "false"
        }
    }
}
